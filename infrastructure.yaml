---
- name: IoT-Firewall
  hosts: all
  become: yes
  vars:
    ssid: "IoT-Firewall"
    wifi_interface: "wlan0"
    wifi_password: "StrongPassword123"
    python_app_dir: "/IoT-Firewall"

  tasks:

    - name: Install required packages
      apt:
        name:
          - python3
          - python3-pip
          - iptables
          - tshark
          - mysql-client
          - hostapd
          - dnsmasq
          - git
        state: present
        update_cache: yes

    - name: Install Python dependencies
      pip:
        name:
          - pyshark
          - mysql-connector-python
          - flask
          - gunicorn

    - name: Create Python app directory
      file:
        path: "{{ python_app_dir }}"
        state: directory
        owner: root
        group: root
        mode: "0755"

    - name: Copy firewall.py
      copy:
        src: firewall.py
        dest: "{{ python_app_dir }}/firewall.py"
        mode: "0755"

    - name: Copy flask_app.py
      copy:
        src: flask_app.py
        dest: "{{ python_app_dir }}/flask_app.py"
        mode: "0755"

    - name: Create systemd service for firewall.py
      copy:
        dest: /etc/systemd/system/firewall.service
        content: |
          [Unit]
          Description=Firewall Script
          After=network.target

          [Service]
          ExecStart=/usr/bin/python3 {{ python_app_dir }}/firewall.py
          Restart=always
          User=root

          [Install]
          WantedBy=multi-user.target
      notify: Restart firewall service

    - name: Create systemd service for Flask API
      copy:
        dest: /etc/systemd/system/flask_app.service
        content: |
          [Unit]
          Description=Flask API for Mobile App
          After=network.target

          [Service]
          ExecStart=/usr/bin/gunicorn -b 0.0.0.0:5000 flask_app:app
          WorkingDirectory={{ python_app_dir }}
          Restart=always
          User=root

          [Install]
          WantedBy=multi-user.target
      notify: Restart flask service

    - name: Enable and start firewall service
      systemd:
        name: firewall
        enabled: yes
        state: started

    - name: Enable and start Flask API service
      systemd:
        name: flask_app
        enabled: yes
        state: started

    - name: Configure hostapd
      copy:
        dest: /etc/hostapd/hostapd.conf
        content: |
          interface={{ wifi_interface }}
          driver=nl80211
          ssid={{ ssid }}
          hw_mode=g
          channel=7
          macaddr_acl=0
          auth_algs=1
          wpa=2
          wpa_passphrase={{ wifi_password }}
          wpa_key_mgmt=WPA-PSK
          rsn_pairwise=CCMP
      notify: Restart hostapd

    - name: Set hostapd daemon configuration
      lineinfile:
        path: /etc/default/hostapd
        line: 'DAEMON_CONF="/etc/hostapd/hostapd.conf"'
        state: present
      notify: Restart hostapd

    - name: Configure dnsmasq
      copy:
        dest: /etc/dnsmasq.conf
        content: |
          interface={{ wifi_interface }}
          dhcp-range=192.168.1.10,192.168.1.100,12h
          dhcp-option=3,192.168.1.1
          dhcp-option=6,8.8.8.8,8.8.4.4
      notify: Restart dnsmasq

    - name: Enable IP forwarding
      sysctl:
        name: net.ipv4.ip_forward
        value: '1'
        state: present

    - name: Configure iptables for NAT
      iptables:
        table: nat
        chain: POSTROUTING
        jump: MASQUERADE
        out_interface: eth0

    - name: Save iptables rules
      shell: iptables-save > /etc/iptables.rules

    - name: Ensure iptables rules are restored on boot
      copy:
        dest: /etc/network/if-pre-up.d/iptables
        mode: "0755"
        content: |
          #!/bin/sh
          iptables-restore < /etc/iptables.rules

    - name: Enable and start services
      systemd:
        name: "{{ item }}"
        enabled: yes
        state: started
      loop:
        - hostapd
        - dnsmasq

  handlers:
    - name: Restart firewall service
      systemd:
        name: firewall
        state: restarted

    - name: Restart flask service
      systemd:
        name: flask_app
        state: restarted

    - name: Restart hostapd
      systemd:
        name: hostapd
        state: restarted

    - name: Restart dnsmasq
      systemd:
        name: dnsmasq
        state: restarted
